// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GestionHotel.Apis.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250613090308_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelDbContext+Chambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeChambreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeChambreId");

                    b.ToTable("Chambres");
                });

            modelBuilder.Entity("HotelDbContext+Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelDbContext+Dommage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cout")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NettoyageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NettoyageId");

                    b.ToTable("Dommages");
                });

            modelBuilder.Entity("HotelDbContext+Nettoyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChambreId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remarques")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChambreId");

                    b.ToTable("Nettoyages");
                });

            modelBuilder.Entity("HotelDbContext+Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HotelDbContext+Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstAnnulee")
                        .HasColumnType("boolean");

                    b.Property<bool>("EstPayee")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelDbContext+ReservationChambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChambreId")
                        .HasColumnType("integer");

                    b.Property<int>("ReservationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChambreId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationChambres");
                });

            modelBuilder.Entity("HotelDbContext+TypeChambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Tarif")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("TypesChambres");
                });

            modelBuilder.Entity("HotelDbContext+Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("HotelDbContext+Chambre", b =>
                {
                    b.HasOne("HotelDbContext+TypeChambre", null)
                        .WithMany("Chambres")
                        .HasForeignKey("TypeChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelDbContext+Dommage", b =>
                {
                    b.HasOne("HotelDbContext+Nettoyage", "Nettoyage")
                        .WithMany("Dommages")
                        .HasForeignKey("NettoyageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nettoyage");
                });

            modelBuilder.Entity("HotelDbContext+Nettoyage", b =>
                {
                    b.HasOne("HotelDbContext+Chambre", "Chambre")
                        .WithMany()
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chambre");
                });

            modelBuilder.Entity("HotelDbContext+Notification", b =>
                {
                    b.HasOne("HotelDbContext+Reservation", "Reservation")
                        .WithMany("Notifications")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelDbContext+Reservation", b =>
                {
                    b.HasOne("HotelDbContext+Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HotelDbContext+ReservationChambre", b =>
                {
                    b.HasOne("HotelDbContext+Chambre", "Chambre")
                        .WithMany()
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelDbContext+Reservation", "Reservation")
                        .WithMany("ReservationChambres")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chambre");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelDbContext+Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelDbContext+Nettoyage", b =>
                {
                    b.Navigation("Dommages");
                });

            modelBuilder.Entity("HotelDbContext+Reservation", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("ReservationChambres");
                });

            modelBuilder.Entity("HotelDbContext+TypeChambre", b =>
                {
                    b.Navigation("Chambres");
                });
#pragma warning restore 612, 618
        }
    }
}
